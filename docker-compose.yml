version: "3.9"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: web
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8080"
    volumes:
      - .:/code
    env_file:
      - ./.env
    restart: on-failure
    ports:
      - "8000:8080"
    depends_on:
      - db
      - rabbitmq
      - redis
      
      
  celery:
    build: 
      context: ./
    container_name: celery
    command: celery -A interactive_menu worker -l info
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      - redis

  celery-beat:
    build: 
      context: ./
    container_name: celery-beat
    command: > 
      sh -c "celery -A interactive_menu beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - .:/code
    depends_on:
      - redis
      - db

  db:
    image: postgres:13
    container_name: postgres
    ports:
      - 5432:5432
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    environment:
      - PGDATA=/data/postgres_data
    env_file:
      - ./.env
  
  rabbitmq:
    container_name: rabbitmq
    restart: on-failure
    image: rabbitmq:latest
    env_file:
      - ./.env
    hostname: rabbitmq
    ports:
      - 5672:5672 
  
  redis:
    container_name: redis
    image: redis:latest
    restart: on-failure
    hostname: redis
    env_file:
      - ./.env
    ports:
      - 6379:6379

volumes:
  postgres_data: